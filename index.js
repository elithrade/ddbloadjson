#!/usr/bin/env node

const buildOptions = require('minimist-options');
const minimist = require('minimist');
const commandLineUsage = require('command-line-usage');

var AWS = require('aws-sdk');
var fs = require('fs');

const options = buildOptions({
  file: {
    type: 'string',
    alias: 'f',
  },
  table: {
    type: 'string',
    alias: 't',
  },
  region: {
    type: 'string',
    alias: 'r',
  },
  // Special option for positional arguments (`_` in minimist)
  arguments: 'string',
});

const args = minimist(process.argv.slice(2), options);
const sections = [
  {
    header: 'ddbloadjson',
    content: `Loads data from a json file generated by using 'aws dynamodb scan --table-name TABLE_NAME > FILE_NAME.json'.

              Your AWS credentials are used to access the DynamoDB table.`,
  },
  {
    header: 'Options',
    optionList: [
      {
        name: 'file',
        description: 'The json input file path.',
      },
      {
        name: 'table',
        description: 'The AWS DynamoDB table name',
      },
      {
        name: 'region',
        description: 'The AWS DynamoDB table region',
      },
    ],
  },
];

const usage = commandLineUsage(sections);
if (!args.file || !args.table || !args.region) {
  console.log(usage);
} else {
  AWS.config.update({ region: args.region });
  var docClient = new AWS.DynamoDB.DocumentClient();

  var content = JSON.parse(fs.readFileSync(args.file, 'utf8'));

  var items = content.Items;
  items.forEach(function (item) {
    Object.keys(item).forEach(function eachKey(key) {
      var value = Object.values(item[key])[0];
      item[key] = value;
    });
    var params = {
      TableName: args.table,
      Item: item,
    };
    docClient.put(params, function (err) {
      if (err) {
        console.error(
          'Unable to PutItem',
          'error: ',
          JSON.stringify(err, null, 2)
        );
      } else {
        console.log('PutItem succeeded');
      }
    });
  });
}
